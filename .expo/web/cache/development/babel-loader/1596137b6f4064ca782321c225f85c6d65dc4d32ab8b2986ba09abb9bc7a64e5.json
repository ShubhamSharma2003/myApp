{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"source\", \"placeholder\", \"contentFit\", \"contentPosition\", \"placeholderContentFit\", \"cachePolicy\", \"onLoad\", \"transition\", \"onError\", \"responsivePolicy\", \"onLoadEnd\", \"onDisplay\", \"priority\", \"blurRadius\", \"recyclingKey\", \"style\", \"nativeViewRef\", \"accessibilityLabel\", \"tintColor\", \"containerViewRef\"];\nvar _jsxFileName = \"/Users/shubhamsharma/Downloads/newApp/node_modules/expo-image/src/ExpoImage.web.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimationManager from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/imageStyles';\nimport useSourceSelection from './web/useSourceSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nloadStyle();\nfunction onLoadAdapter(onLoad) {\n  return event => {\n    const target = event.target;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null\n      },\n      cacheType: 'none'\n    });\n  };\n}\nfunction onErrorAdapter(onError) {\n  return ({\n    source\n  }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`\n    });\n  };\n}\nfunction setCssVariablesForFlipTransitions(element, size) {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n}\nfunction isFlipTransition(transition) {\n  return transition?.effect === 'flip-from-bottom' || transition?.effect === 'flip-from-top' || transition?.effect === 'flip-from-left' || transition?.effect === 'flip-from-right';\n}\nfunction getAnimationKey(source, recyclingKey) {\n  const uri = source && 'uri' in source && source.uri || '';\n  return recyclingKey ? [recyclingKey, uri].join('-') : uri;\n}\nexport default function ExpoImage(_ref) {\n  let {\n      source,\n      placeholder,\n      contentFit,\n      contentPosition,\n      placeholderContentFit,\n      cachePolicy,\n      onLoad,\n      transition,\n      onError,\n      responsivePolicy,\n      onLoadEnd,\n      onDisplay,\n      priority,\n      blurRadius,\n      recyclingKey,\n      style,\n      nativeViewRef,\n      accessibilityLabel,\n      tintColor,\n      containerViewRef\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const imageHashStyle = {\n    objectFit: placeholderContentFit || contentFit\n  };\n  const selectedSource = useSourceSelection(source, responsivePolicy, containerViewRef, isFlipTransition(transition) ? setCssVariablesForFlipTransitions : null);\n  const initialNodeAnimationKey = getAnimationKey(placeholder?.[0], recyclingKey);\n  const initialNode = placeholder?.[0]?.uri ? [initialNodeAnimationKey, ({\n    onAnimationFinished\n  }) => (className, style) => _jsxDEV(ImageWrapper, {\n    ref: nativeViewRef,\n    source: placeholder?.[0],\n    style: Object.assign({\n      objectFit: imagePlaceholderContentFit\n    }, blurRadius ? {\n      filter: `blur(${blurRadius}px)`\n    } : {}, style),\n    className: className,\n    events: {\n      onTransitionEnd: [onAnimationFinished]\n    },\n    contentPosition: {\n      left: '50%',\n      top: '50%'\n    },\n    hashPlaceholderContentPosition: contentPosition,\n    hashPlaceholderStyle: imageHashStyle,\n    accessibilityLabel: accessibilityLabel,\n    cachePolicy: cachePolicy,\n    priority: priority,\n    tintColor: tintColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 13\n  }, this)] : null;\n  const currentNodeAnimationKey = getAnimationKey(selectedSource ?? placeholder?.[0], recyclingKey);\n  const currentNode = [currentNodeAnimationKey, ({\n    onAnimationFinished,\n    onReady,\n    onMount,\n    onError: onErrorInner\n  }) => (className, style) => _jsxDEV(ImageWrapper, {\n    ref: nativeViewRef,\n    source: selectedSource || placeholder?.[0],\n    events: {\n      onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n      onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n      onMount: [onMount],\n      onTransitionEnd: [onAnimationFinished],\n      onDisplay: [onDisplay]\n    },\n    style: Object.assign({\n      objectFit: selectedSource ? contentFit : imagePlaceholderContentFit\n    }, blurRadius ? {\n      filter: `blur(${blurRadius}px)`\n    } : {}, style),\n    className: className,\n    cachePolicy: cachePolicy,\n    priority: priority,\n    contentPosition: selectedSource ? contentPosition : {\n      top: '50%',\n      left: '50%'\n    },\n    hashPlaceholderContentPosition: contentPosition,\n    hashPlaceholderStyle: imageHashStyle,\n    accessibilityLabel: accessibilityLabel,\n    tintColor: tintColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this)];\n  return _jsxDEV(View, Object.assign({\n    ref: containerViewRef,\n    dataSet: {\n      expoimage: true\n    },\n    style: [{\n      overflow: 'hidden'\n    }, style]\n  }, props, {\n    children: _jsxDEV(AnimationManager, {\n      transition: transition,\n      recyclingKey: recyclingKey,\n      initial: initialNode,\n      children: currentNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","View","AnimationManager","ImageWrapper","loadStyle","useSourceSelection","jsxDEV","_jsxDEV","onLoadAdapter","onLoad","event","target","source","url","currentSrc","width","naturalWidth","height","naturalHeight","mediaType","cacheType","onErrorAdapter","onError","error","uri","setCssVariablesForFlipTransitions","element","size","style","setProperty","isFlipTransition","transition","effect","getAnimationKey","recyclingKey","join","ExpoImage","_ref","placeholder","contentFit","contentPosition","placeholderContentFit","cachePolicy","responsivePolicy","onLoadEnd","onDisplay","priority","blurRadius","nativeViewRef","accessibilityLabel","tintColor","containerViewRef","props","_objectWithoutPropertiesLoose","_excluded","imagePlaceholderContentFit","imageHashStyle","objectFit","selectedSource","initialNodeAnimationKey","initialNode","onAnimationFinished","className","ref","Object","assign","filter","events","onTransitionEnd","left","top","hashPlaceholderContentPosition","hashPlaceholderStyle","fileName","_jsxFileName","lineNumber","columnNumber","currentNodeAnimationKey","currentNode","onReady","onMount","onErrorInner","dataSet","expoimage","overflow","children","initial"],"sources":["/Users/shubhamsharma/Downloads/newApp/node_modules/expo-image/src/ExpoImage.web.tsx"],"sourcesContent":["import React from 'react';\nimport { View } from 'react-native-web';\n\nimport type { ImageNativeProps, ImageSource, ImageLoadEventData, ImageRef } from './Image.types';\nimport AnimationManager, { AnimationManagerNode } from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/imageStyles';\nimport useSourceSelection from './web/useSourceSelection';\n\nloadStyle();\n\nfunction onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {\n  return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = event.target as HTMLImageElement;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null,\n      },\n      cacheType: 'none',\n    });\n  };\n}\n\nfunction onErrorAdapter(onError?: { (event: { error: string }): void }) {\n  return ({ source }: { source?: ImageSource | null }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`,\n    });\n  };\n}\n\n// Used for flip transitions to mimic native animations\nfunction setCssVariablesForFlipTransitions(element: HTMLElement, size: DOMRect) {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n}\n\nfunction isFlipTransition(transition: ImageNativeProps['transition']) {\n  return (\n    transition?.effect === 'flip-from-bottom' ||\n    transition?.effect === 'flip-from-top' ||\n    transition?.effect === 'flip-from-left' ||\n    transition?.effect === 'flip-from-right'\n  );\n}\n\nfunction getAnimationKey(\n  source: ImageSource | ImageRef | undefined,\n  recyclingKey?: string | null\n): string {\n  const uri = (source && 'uri' in source && source.uri) || '';\n  return recyclingKey ? [recyclingKey, uri].join('-') : uri;\n}\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  contentFit,\n  contentPosition,\n  placeholderContentFit,\n  cachePolicy,\n  onLoad,\n  transition,\n  onError,\n  responsivePolicy,\n  onLoadEnd,\n  onDisplay,\n  priority,\n  blurRadius,\n  recyclingKey,\n  style,\n  nativeViewRef,\n  accessibilityLabel,\n  tintColor,\n  containerViewRef,\n  ...props\n}: ImageNativeProps) {\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const imageHashStyle = {\n    objectFit: placeholderContentFit || contentFit,\n  };\n  const selectedSource = useSourceSelection(\n    source,\n    responsivePolicy,\n    containerViewRef as React.MutableRefObject<HTMLDivElement | null>,\n    isFlipTransition(transition) ? setCssVariablesForFlipTransitions : null\n  );\n\n  const initialNodeAnimationKey = getAnimationKey(placeholder?.[0], recyclingKey);\n  const initialNode: AnimationManagerNode | null = placeholder?.[0]?.uri\n    ? [\n        initialNodeAnimationKey,\n        ({ onAnimationFinished }) =>\n          (className, style) => (\n            <ImageWrapper\n              ref={nativeViewRef as React.Ref<HTMLImageElement> | undefined}\n              source={placeholder?.[0]}\n              style={{\n                objectFit: imagePlaceholderContentFit,\n                ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                ...style,\n              }}\n              className={className}\n              events={{\n                onTransitionEnd: [onAnimationFinished],\n              }}\n              contentPosition={{ left: '50%', top: '50%' }}\n              hashPlaceholderContentPosition={contentPosition}\n              hashPlaceholderStyle={imageHashStyle}\n              accessibilityLabel={accessibilityLabel}\n              cachePolicy={cachePolicy}\n              priority={priority}\n              tintColor={tintColor}\n            />\n          ),\n      ]\n    : null;\n\n  const currentNodeAnimationKey = getAnimationKey(selectedSource ?? placeholder?.[0], recyclingKey);\n  const currentNode: AnimationManagerNode = [\n    currentNodeAnimationKey,\n    ({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) =>\n      (className, style) => (\n        <ImageWrapper\n          ref={nativeViewRef as React.Ref<HTMLImageElement> | undefined}\n          source={selectedSource || placeholder?.[0]}\n          events={{\n            onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n            onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n            onMount: [onMount],\n            onTransitionEnd: [onAnimationFinished],\n            onDisplay: [onDisplay],\n          }}\n          style={{\n            objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,\n            ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n            ...style,\n          }}\n          className={className}\n          cachePolicy={cachePolicy}\n          priority={priority}\n          contentPosition={selectedSource ? contentPosition : { top: '50%', left: '50%' }}\n          hashPlaceholderContentPosition={contentPosition}\n          hashPlaceholderStyle={imageHashStyle}\n          accessibilityLabel={accessibilityLabel}\n          tintColor={tintColor}\n        />\n      ),\n  ];\n  return (\n    <View\n      ref={containerViewRef}\n      dataSet={{ expoimage: true }}\n      style={[{ overflow: 'hidden' }, style]}\n      {...props}>\n      <AnimationManager transition={transition} recyclingKey={recyclingKey} initial={initialNode}>\n        {currentNode}\n      </AnimationManager>\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}