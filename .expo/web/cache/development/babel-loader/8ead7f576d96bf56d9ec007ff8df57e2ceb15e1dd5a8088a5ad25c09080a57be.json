{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsharma/Downloads/newApp/src/components/universal/Pressable.js\";\nimport React, { useRef } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PremiumTouchable = React.memo(({\n  onPress,\n  children,\n  style\n}) => {\n  const scaleValue = useRef(new Animated.Value(1)).current;\n  const handlePressIn = () => {\n    Animated.spring(scaleValue, {\n      toValue: 0.95,\n      speed: 15,\n      useNativeDriver: true\n    }).start();\n  };\n  const handlePressOut = () => {\n    Animated.spring(scaleValue, {\n      toValue: 1,\n      speed: 15,\n      useNativeDriver: true\n    }).start(() => {\n      if (onPress) onPress();\n    });\n  };\n  return _jsxDEV(Pressable, {\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    style: {\n      width: \"100%\"\n    },\n    children: _jsxDEV(Animated.View, {\n      style: [styles.button, style, {\n        transform: [{\n          scale: scaleValue\n        }]\n      }],\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n});\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#f3f3f3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 2\n  }\n});\nexport default PremiumTouchable;","map":{"version":3,"names":["React","useRef","Pressable","StyleSheet","Animated","jsxDEV","_jsxDEV","PremiumTouchable","memo","onPress","children","style","scaleValue","Value","current","handlePressIn","spring","toValue","speed","useNativeDriver","start","handlePressOut","onPressIn","onPressOut","width","View","styles","button","transform","scale","fileName","_jsxFileName","lineNumber","columnNumber","create","backgroundColor","alignItems","justifyContent","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation"],"sources":["/Users/shubhamsharma/Downloads/newApp/src/components/universal/Pressable.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Pressable, StyleSheet, Animated } from \"react-native\";\n\nconst PremiumTouchable = React.memo(({ onPress, children, style }) => {\n    const scaleValue = useRef(new Animated.Value(1)).current;\n\n    const handlePressIn = () => {\n        Animated.spring(scaleValue, {\n            toValue: 0.95,\n            speed: 15,  // Faster response\n            useNativeDriver: true,\n        }).start();\n    };\n\n    const handlePressOut = () => {\n        Animated.spring(scaleValue, {\n            toValue: 1,\n            speed: 15, \n            useNativeDriver: true,\n        }).start(() => {\n            if (onPress) onPress();\n        });\n    };\n\n    return (\n        <Pressable onPressIn={handlePressIn} onPressOut={handlePressOut} style={{ width: \"100%\" }}>\n            <Animated.View style={[styles.button, style, { transform: [{ scale: scaleValue }] }]}>\n                {children}\n            </Animated.View>\n        </Pressable>\n    );\n});\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: \"#f3f3f3\", \n        alignItems: \"center\",\n        justifyContent: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n        elevation: 2,\n    },\n});\n\nexport default PremiumTouchable;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,gBAAgB,GAAGP,KAAK,CAACQ,IAAI,CAAC,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAClE,MAAMC,UAAU,GAAGX,MAAM,CAAC,IAAIG,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAExD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBX,QAAQ,CAACY,MAAM,CAACJ,UAAU,EAAE;MACxBK,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE;IACrB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBjB,QAAQ,CAACY,MAAM,CAACJ,UAAU,EAAE;MACxBK,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE;IACrB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;MACX,IAAIX,OAAO,EAAEA,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EAED,OACIH,OAAA,CAACJ,SAAS;IAACoB,SAAS,EAAEP,aAAc;IAACQ,UAAU,EAAEF,cAAe;IAACV,KAAK,EAAE;MAAEa,KAAK,EAAE;IAAO,CAAE;IAAAd,QAAA,EACtFJ,OAAA,CAACF,QAAQ,CAACqB,IAAI;MAACd,KAAK,EAAE,CAACe,MAAM,CAACC,MAAM,EAAEhB,KAAK,EAAE;QAAEiB,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAEjB;QAAW,CAAC;MAAE,CAAC,CAAE;MAAAF,QAAA,EAChFA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEpB,CAAC,CAAC;AAEF,MAAMP,MAAM,GAAGvB,UAAU,CAAC+B,MAAM,CAAC;EAC7BP,MAAM,EAAE;IACJQ,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEf,KAAK,EAAE,CAAC;MAAEgB,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAepC,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}