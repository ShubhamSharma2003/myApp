{"ast":null,"code":"export function resolveBlurhashString(str) {\n  const [hash, width, height] = str.replace(/^blurhash:\\//, '').split('/');\n  return {\n    uri: 'blurhash:/' + hash,\n    width: parseInt(width, 10) || 16,\n    height: parseInt(height, 10) || 16\n  };\n}\nexport function resolveThumbhashString(str) {\n  const hash = str.replace(/^thumbhash:\\//, '');\n  return {\n    uri: 'thumbhash:/' + hash\n  };\n}","map":{"version":3,"names":["resolveBlurhashString","str","hash","width","height","replace","split","uri","parseInt","resolveThumbhashString"],"sources":["/Users/shubhamsharma/Downloads/newApp/node_modules/expo-image/src/utils/resolveHashString.web.tsx"],"sourcesContent":["import { ImageSource } from '../Image.types';\n\n/**\n * Converts a string in blurhash format (`blurhash:/<hash>/<width>/<height>`\n * or <hash>/<width>/<height>) into an `ImageSource`.\n *\n * @return An ImageSource representing the provided blurhash.\n * */\nexport function resolveBlurhashString(str: string): ImageSource {\n  const [hash, width, height] = str.replace(/^blurhash:\\//, '').split('/');\n  return {\n    uri: 'blurhash:/' + hash,\n    width: parseInt(width, 10) || 16,\n    height: parseInt(height, 10) || 16,\n  };\n}\n\n/**\n * Converts a string in thumbhash format (`thumbhash:/<hash>` or `<hash>`)\n * into an `ImageSource`.\n * Note: Unlike the `resolveBlurhashString` the `thumbhash:/` scheme has to be present,\n * as the scheme has to be explicitly stated to be interpreted a `thumbhash` source.\n *\n * @return An ImageSource representing the provided thumbhash.\n * */\nexport function resolveThumbhashString(str: string): ImageSource {\n  const hash = str.replace(/^thumbhash:\\//, '');\n  return {\n    uri: 'thumbhash:/' + hash,\n  };\n}\n"],"mappings":"AAQA,OAAO,SAASA,qBAAqBA,CAACC,GAAW,EAAe;EAC9D,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC,GAAGH,GAAG,CAACI,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACxE,OAAO;IACLC,GAAG,EAAE,YAAY,GAAGL,IAAI;IACxBC,KAAK,EAAEK,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE;IAChCC,MAAM,EAAEI,QAAQ,CAACJ,MAAM,EAAE,EAAE,CAAC,IAAI;EAClC,CAAC;AACH;AAUA,OAAO,SAASK,sBAAsBA,CAACR,GAAW,EAAe;EAC/D,MAAMC,IAAI,GAAGD,GAAG,CAACI,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;EAC7C,OAAO;IACLE,GAAG,EAAE,aAAa,GAAGL;EACvB,CAAC;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}